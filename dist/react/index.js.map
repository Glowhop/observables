{"version":3,"sources":["../../src/react/useItem.ts","../../src/react/useKey.ts","../../src/react/useValue.ts","../../src/react/useChange.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport type ObservableList from \"../core/ObservableList\";\n\nexport default function useItem<T>(\n  observable: ObservableList<T>,\n  index: number\n): T | undefined {\n  const [value, setValue] = useState(() => observable.getItem(index));\n\n  useEffect(() => {\n    const sub = () => {\n      setValue(observable.getItem(index));\n    };\n\n    sub();\n\n    const unsubscribe = observable.subscribeIndex(index, sub);\n\n    return () => {\n      unsubscribe();\n    };\n  }, [observable, index]);\n\n  return value;\n}\n","import { useEffect, useState } from \"react\";\nimport type ObservableMap from \"../core/ObservableMap\";\n\nexport default function useKey<K extends string | number, T>(\n  observable: ObservableMap<K, T>,\n  key: K\n): T | undefined {\n  const [value, setValue] = useState(() => observable.getItem(key));\n\n  useEffect(() => {\n    const sub = () => {\n      setValue(observable.getItem(key));\n    };\n\n    sub();\n\n    const unsubscribe = observable.subscribeKey(key, sub);\n\n    return () => {\n      unsubscribe();\n    };\n  }, [observable, key]);\n\n  return value;\n}\n","import { useEffect, useState } from \"react\";\nimport type { Observable } from \"../core\";\n\ninterface UseValue {\n  <T>(observable: Observable<T>): T;\n  <T, W = T>(\n    observable: Observable<T>,\n    accessor?: (value: T) => W,\n    deps?: React.DependencyList,\n  ): W;\n}\n\nconst useValue: UseValue = <T, W = T>(\n  observable: Observable<T>,\n  accessor?: (value: T) => W,\n  deps?: React.DependencyList,\n) => {\n\n  const getter = (newValue: T) => {\n    return accessor ? accessor(newValue) : newValue;\n  };\n\n  const [value, setValue] = useState(() => getter(observable.get()));\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: useEffectEvent\n  useEffect(() => {\n    const fn = (newValue: T) => {\n      setValue(() => getter(newValue));\n    };\n\n    fn(observable.get());\n\n    observable.subscribe(fn);\n\n    return () => {\n      observable.unsubscribe(fn);\n    };\n  }, [observable, ...(deps ?? [])]);\n\n  return value;\n};\n\nexport default useValue;\n","import { useEffect } from \"react\";\nimport type Observable from \"../core/Observable\";\n\nexport default function useChange<T, W>(\n  observable: Observable<T>,\n  accessor: (value: T) => W,\n  deps: React.DependencyList\n) {\n  useEffect(() => {\n    const sub = () => {\n      accessor(observable.get());\n    };\n\n    sub();\n\n    const unsubscribe = observable.subscribe(sub);\n\n    return () => {\n      unsubscribe();\n    };\n  }, [observable, ...deps]);\n}\n"],"mappings":";AAAA,SAAS,WAAW,gBAAgB;AAGrB,SAAR,QACL,YACA,OACe;AACf,QAAM,CAAC,OAAO,QAAQ,IAAI,SAAS,MAAM,WAAW,QAAQ,KAAK,CAAC;AAElE,YAAU,MAAM;AACd,UAAM,MAAM,MAAM;AAChB,eAAS,WAAW,QAAQ,KAAK,CAAC;AAAA,IACpC;AAEA,QAAI;AAEJ,UAAM,cAAc,WAAW,eAAe,OAAO,GAAG;AAExD,WAAO,MAAM;AACX,kBAAY;AAAA,IACd;AAAA,EACF,GAAG,CAAC,YAAY,KAAK,CAAC;AAEtB,SAAO;AACT;;;ACxBA,SAAS,aAAAA,YAAW,YAAAC,iBAAgB;AAGrB,SAAR,OACL,YACA,KACe;AACf,QAAM,CAAC,OAAO,QAAQ,IAAIA,UAAS,MAAM,WAAW,QAAQ,GAAG,CAAC;AAEhE,EAAAD,WAAU,MAAM;AACd,UAAM,MAAM,MAAM;AAChB,eAAS,WAAW,QAAQ,GAAG,CAAC;AAAA,IAClC;AAEA,QAAI;AAEJ,UAAM,cAAc,WAAW,aAAa,KAAK,GAAG;AAEpD,WAAO,MAAM;AACX,kBAAY;AAAA,IACd;AAAA,EACF,GAAG,CAAC,YAAY,GAAG,CAAC;AAEpB,SAAO;AACT;;;ACxBA,SAAS,aAAAE,YAAW,YAAAC,iBAAgB;AAYpC,IAAM,WAAqB,CACzB,YACA,UACA,SACG;AAEH,QAAM,SAAS,CAAC,aAAgB;AAC9B,WAAO,WAAW,SAAS,QAAQ,IAAI;AAAA,EACzC;AAEA,QAAM,CAAC,OAAO,QAAQ,IAAIA,UAAS,MAAM,OAAO,WAAW,IAAI,CAAC,CAAC;AAGjE,EAAAD,WAAU,MAAM;AACd,UAAM,KAAK,CAAC,aAAgB;AAC1B,eAAS,MAAM,OAAO,QAAQ,CAAC;AAAA,IACjC;AAEA,OAAG,WAAW,IAAI,CAAC;AAEnB,eAAW,UAAU,EAAE;AAEvB,WAAO,MAAM;AACX,iBAAW,YAAY,EAAE;AAAA,IAC3B;AAAA,EACF,GAAG,CAAC,YAAY,GAAI,QAAQ,CAAC,CAAE,CAAC;AAEhC,SAAO;AACT;AAEA,IAAO,mBAAQ;;;AC1Cf,SAAS,aAAAE,kBAAiB;AAGX,SAAR,UACL,YACA,UACA,MACA;AACA,EAAAA,WAAU,MAAM;AACd,UAAM,MAAM,MAAM;AAChB,eAAS,WAAW,IAAI,CAAC;AAAA,IAC3B;AAEA,QAAI;AAEJ,UAAM,cAAc,WAAW,UAAU,GAAG;AAE5C,WAAO,MAAM;AACX,kBAAY;AAAA,IACd;AAAA,EACF,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC;AAC1B;","names":["useEffect","useState","useEffect","useState","useEffect"]}